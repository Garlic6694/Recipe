<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.upc.recipe.mbg.mapper.RecipeMapper">
  <resultMap id="BaseResultMap" type="com.upc.recipe.mbg.model.Recipe">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.upc.recipe.mbg.model.Recipe">
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="des" jdbcType="LONGVARCHAR" property="des" />
    <result column="cats" jdbcType="LONGVARCHAR" property="cats" />
    <result column="ing" jdbcType="LONGVARCHAR" property="ing" />
    <result column="steps" jdbcType="LONGVARCHAR" property="steps" />
    <result column="tip" jdbcType="LONGVARCHAR" property="tip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status
  </sql>
  <sql id="Blob_Column_List">
    title, des, cats, ing, steps, tip
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.upc.recipe.mbg.model.RecipeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from recipe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.upc.recipe.mbg.model.RecipeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recipe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from recipe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recipe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.upc.recipe.mbg.model.RecipeExample">
    delete from recipe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.upc.recipe.mbg.model.Recipe">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recipe (status, title, des, 
      cats, ing, steps, 
      tip)
    values (#{status,jdbcType=INTEGER}, #{title,jdbcType=LONGVARCHAR}, #{des,jdbcType=LONGVARCHAR}, 
      #{cats,jdbcType=LONGVARCHAR}, #{ing,jdbcType=LONGVARCHAR}, #{steps,jdbcType=LONGVARCHAR}, 
      #{tip,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.upc.recipe.mbg.model.Recipe">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recipe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        status,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="des != null">
        des,
      </if>
      <if test="cats != null">
        cats,
      </if>
      <if test="ing != null">
        ing,
      </if>
      <if test="steps != null">
        steps,
      </if>
      <if test="tip != null">
        tip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="des != null">
        #{des,jdbcType=LONGVARCHAR},
      </if>
      <if test="cats != null">
        #{cats,jdbcType=LONGVARCHAR},
      </if>
      <if test="ing != null">
        #{ing,jdbcType=LONGVARCHAR},
      </if>
      <if test="steps != null">
        #{steps,jdbcType=LONGVARCHAR},
      </if>
      <if test="tip != null">
        #{tip,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.upc.recipe.mbg.model.RecipeExample" resultType="java.lang.Long">
    select count(*) from recipe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update recipe
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.des != null">
        des = #{record.des,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cats != null">
        cats = #{record.cats,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ing != null">
        ing = #{record.ing,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.steps != null">
        steps = #{record.steps,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tip != null">
        tip = #{record.tip,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update recipe
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      title = #{record.title,jdbcType=LONGVARCHAR},
      des = #{record.des,jdbcType=LONGVARCHAR},
      cats = #{record.cats,jdbcType=LONGVARCHAR},
      ing = #{record.ing,jdbcType=LONGVARCHAR},
      steps = #{record.steps,jdbcType=LONGVARCHAR},
      tip = #{record.tip,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update recipe
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.upc.recipe.mbg.model.Recipe">
    update recipe
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=LONGVARCHAR},
      </if>
      <if test="cats != null">
        cats = #{cats,jdbcType=LONGVARCHAR},
      </if>
      <if test="ing != null">
        ing = #{ing,jdbcType=LONGVARCHAR},
      </if>
      <if test="steps != null">
        steps = #{steps,jdbcType=LONGVARCHAR},
      </if>
      <if test="tip != null">
        tip = #{tip,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.upc.recipe.mbg.model.Recipe">
    update recipe
    set status = #{status,jdbcType=INTEGER},
      title = #{title,jdbcType=LONGVARCHAR},
      des = #{des,jdbcType=LONGVARCHAR},
      cats = #{cats,jdbcType=LONGVARCHAR},
      ing = #{ing,jdbcType=LONGVARCHAR},
      steps = #{steps,jdbcType=LONGVARCHAR},
      tip = #{tip,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.upc.recipe.mbg.model.Recipe">
    update recipe
    set status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>